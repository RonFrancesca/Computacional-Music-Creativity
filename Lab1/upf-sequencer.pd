#N canvas 212 205 945 637 12;
#X obj 203 325 + 1;
#X obj 134 163 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 1
1;
#X obj 131 349 mod 16;
#X obj 127 586 hradio 15 1 0 16 empty empty Step_sequencer 0 -8 0 10
-191407 -1 -66577 1;
#X floatatom 157 387 5 0 0 0 - - -;
#X obj 133 244 metro 500;
#X floatatom 257 42 5 0 0 0 Insert_bpm - -;
#X obj 258 77 t b f;
#X msg 256 107 60000;
#X floatatom 286 167 5 0 0 0 - - -;
#X text 376 584 Sequencer gui;
#X text 214 239 The metro is seding a bang every x milliseconds. In
this case \, I set as an inialization parameter 500 ms. This value
is going to be changed when we set a different value for the bpm to
ms part of this pd patch.;
#X obj 256 141 /;
#X obj 253 179 / 4;
#X floatatom 275 207 5 0 0 0 - - -;
#X obj 131 326 int 1;
#X msg 50 301 0;
#X obj 50 264 bng 15 250 50 0 empty empty Reset 17 7 0 10 -262144 -1
-66577;
#X text 312 43 Bpm to seconds. This is going to convert the bmp (given
as input to the trigger) to ms \, set as the new value of the metro.
The input is given to a trigger \, which \, since is working from right-to-left
\, it is going to first store the bpm to the / operator \, and afterwards
\, to bang the 60000 value to the divisor operator;
#X text 334 173 Diving the bpm value in ms by 4 \, in order to have
the sequencer triggered every sub-beat. In fact a sequencer of 16 \,
it is going to have 4 beats \, each divided in 4 sub-beats;
#X text 237 331 Implementation of a counter. The output of the counter
is also the input of the mod operator \, which is going to make the
sequencer start again from the step 0 every 16 steps. the sequencer
can also be reseted from the reset bang.;
#X connect 0 0 15 1;
#X connect 1 0 5 0;
#X connect 2 0 3 0;
#X connect 2 0 4 0;
#X connect 5 0 15 0;
#X connect 6 0 7 0;
#X connect 7 0 8 0;
#X connect 7 1 12 1;
#X connect 8 0 12 0;
#X connect 12 0 9 0;
#X connect 12 0 13 0;
#X connect 13 0 14 0;
#X connect 13 0 5 1;
#X connect 15 0 0 0;
#X connect 15 0 2 0;
#X connect 16 0 15 0;
#X connect 17 0 16 0;
